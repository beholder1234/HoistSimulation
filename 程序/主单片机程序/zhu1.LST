C51 COMPILER V9.01   ZHU1                                                                  06/14/2018 11:48:13 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE ZHU1
OBJECT MODULE PLACED IN zhu1.OBJ
COMPILER INVOKED BY: F:\My software\C51\BIN\C51.EXE zhu1.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "reg51.h"
   2          #define uchar unsigned char
   3          sfr Seg=0x80;
   4          sfr Motor=0xa0;
   5          sfr Signal=0xb0;
   6          sbit OpenDoor=P1^0;
   7          sbit CloseDoor=P1^1;
   8          sbit Warning=P1^2;
   9          sbit UP=P1^3;
  10          sbit DOWN=P1^4;
  11          sbit Switch=P1^5;
  12          sbit OverWeight=P1^6;
  13          sbit beep=P1^7;
  14          
  15          char SegArray[]={0xff,0xf9,0xa4,0xb0,0x99,0x92};         //Â¥²ãÏÔÊ¾ÊýÂë¹ÜÊý×é,0ÏîÊýÖµ×÷ÓÃ£¬Ä¿µÄÈÃÏîÊýºÍÇÅÏáÎ»ÖÃ±ä
             -Á¿(Location)¶ÔÓ¦
  16          
  17          char DoorRun[4]={0x40,0x80,0x10,0x20};  //ÃÅÏµÍ³ËÄÏàËÄÅÄ¹¤×÷·½Ê½  ·´×ª£¨¹ØÃÅ£©
  18          char DoorRun1[4]={0x20,0x10,0x80,0x40}; //                        Õý×ª£¨¿ªÃÅ£©
  19          
  20          char HoistRun[4]={0x04,0x08,0x01,0x02};  //ÆðÖØ»úËÄÏàËÄÅÄ¹¤×÷·½Ê½  ·´×ª£¨ÏÂÐÐ£©
  21          char HoistRun1[4]={0x02,0x01,0x08,0x04}; //                        Õý×ª£¨ÉÏÐÐ£©
  22          
  23          char HoistControlArray[]={0xf0,0xf1,0xf2,0xf3,
  24                                    0xf4,0xf5,0xf6,0xf7,
  25                                                        0xf8,0xf9,0xfa,0xfb,
  26                                                    0xfc,0xfd,0xfe,0xff};
  27          char Zhu_AcceptSaveArray[]={0xFf};                                      //Ö»Òªµ×ËÄÎ»£¬ÔÚÅÐ¶ÏÊÇ»á×óÒÆËÄÎ»±ä³É¸ßËÄÎ»
  28          
  29          char LampControlArray[]={0x0f,0x1f,0x2f,0x3f,
  30                                   0xcf,0xbf,0xaf,0x9f};
  31          
  32          
  33          char Zhu_SentSaveArray[2]={0x0f};            // Òò³õÊ¼×´Ì¬Way=0 Location=1£¬ËùÒÔÎª0x0f 
  34          char Location=1,Way=0,Layer=0,DoorStatus=0;    //DoorStatus 1±íÃÅ¿ª×Å£¬0±íÃÅ¹Ø×Å   
  35          void Zhu_Status();
  36          void Zhu_RequestSent();
  37          void delay1ms(void) 
  38          {         
  39   1                 unsigned char a,b,c;
  40   1                 for(c=10;c>0;c--)
  41   1                      for(b=42;b>0;b--)
  42   1                           for(a=2;a>0;a--);               
  43   1      }
  44          
  45          void delay100ms(void)        //ÃÅ¹Ø±Õ»ò¿ªÆôÍê³Éºó£¬ÓÃ1s·ÖÊ®´Î£¬Ã¿´Î¾ùÅÐ¶ÏÊÇ·ñÓÐ£¬¿ªÃÅ£¬¹ØÃÅ£¬¾¯±¨£¬Æ½²ã°´¼
             -üÒªÇó
  46          {
  47   1          unsigned char a,b,c;
  48   1          for(c=19;c>0;c--)
  49   1              for(b=20;b>0;b--)
  50   1                  for(a=130;a>0;a--);
  51   1      }
  52          void delay62ms500us(void)   //Îó²î 0us
  53          {
C51 COMPILER V9.01   ZHU1                                                                  06/14/2018 11:48:13 PAGE 2   

  54   1          unsigned char a,b;
  55   1          for(b=224;b>0;b--)
  56   1              for(a=138;a>0;a--);
  57   1      }
  58          
  59          void delay31ms250us(void)   //Îó²î 0us
  60          {
  61   1          unsigned char a,b,c;
  62   1          for(c=2;c>0;c--)
  63   1              for(b=220;b>0;b--)
  64   1                  for(a=34;a>0;a--);
  65   1      }
  66          
  67          void delay20ms825us(void)   //Îó²î 0us
  68          {
  69   1          unsigned char a,b;
  70   1          for(b=58;b>0;b--)
  71   1              for(a=178;a>0;a--);
  72   1      }
  73          
  74          
  75          void delay300ms(void)   //Îó²î 0us
  76          {
  77   1          unsigned char a,b,c;
  78   1          for(c=5;c>0;c--)
  79   1              for(b=212;b>0;b--)
  80   1                  for(a=140;a>0;a--);
  81   1      }
  82          void delay2s(void)   //ÃÅ¿ªÆôºóµÈ´ýÁ½Ãë£¨ÓÃ»§½ø³ö£©
  83          {
  84   1          unsigned char a,b,c;
  85   1          for(c=127;c>0;c--)
  86   1              for(b=235;b>0;b--)
  87   1                  for(a=32;a>0;a--);
  88   1      }
  89          void SwitchJudge()
  90          {
  91   1      while(1)
  92   1          {
  93   2               if(Switch==0)
  94   2                   break;
  95   2              
  96   2              
  97   2              }
  98   1      }
  99          void ArriveSound()                                                       // µ½´ï·äÃù×Ó³ÌÐò
 100          { 
 101   1      
 102   1          unsigned char a,b,c;
 103   1              for(c=3;c>0;c--)
 104   1                  for(b=2;b>0;b--)
 105   1                      for(a=10;a>0;a--)
 106   1                                              {
 107   2                                               beep=~beep;
 108   2                                       delay1ms();
 109   2                                              }                        
 110   1      
 111   1      }
 112          
 113          
 114          void OverWeightSound()
 115          {
C51 COMPILER V9.01   ZHU1                                                                  06/14/2018 11:48:13 PAGE 3   

 116   1      while(OverWeight==0)
 117   1          {
 118   2              beep=~beep;
 119   2              delay1ms();             
 120   2              }
 121   1      }
 122          void The_Lamp_Of_Way()
 123          {
 124   1      if(Way==0 && Layer!=0)
 125   1          {
 126   2          UP=1;
 127   2              DOWN=0;
 128   2              }
 129   1      else if(Way==4 && Layer!=0)
 130   1          {
 131   2              UP=0;
 132   2              DOWN=1; 
 133   2              }
 134   1      else if(Layer==0)
 135   1          {
 136   2               UP=0;
 137   2               DOWN=0;        
 138   2              }
 139   1      } 
 140          void Judge()                                                                    // ¶ÔÎ»ÒÆÂ¥²ãÊý£¨Layer£©ºÍ·½Ïò£¨Way£©½øÐÐÅÐ¶Ï
 141          {
 142   1      switch(Zhu_AcceptSaveArray[0]<<4)                                        //<<:×óÒÆ²¹0    >>:ÓÒÒÆ²¹0(×¢£ºÏÈÓÃ << ÔÙÓÃ >> Î»ÒÆÊýÏàÍ¬£¬Öµ²»±ä£¬
             -Òòcpu½«×óÒÆÊý´¢´æÆðÀ´ÁË)
 143   1              {
 144   2              case 0x00:
 145   2                  {
 146   3                   if((Layer=Location-1)>0) Way=4;
 147   3                       else {Way=0;}                   
 148   3                       break;
 149   3                  }
 150   2      
 151   2          case 0x10:
 152   2                  {
 153   3                      if((Layer=Location-2)>0) Way=4;
 154   3                      else {Layer=2-Location;Way=0;}
 155   3                      break;
 156   3                      }
 157   2              case 0x20:
 158   2                  {
 159   3                      if((Layer=Location-3)>0) Way=4;
 160   3                      else {Layer=3-Location;Way=0;}
 161   3                      break;
 162   3                      }
 163   2              case 0x30:
 164   2                  {
 165   3                      if((Layer=Location-4)>0) Way=4;
 166   3                      else {Layer=4-Location;Way=0;}
 167   3                      break;
 168   3                      }
 169   2              case 0x40:
 170   2                  {
 171   3                      if((Layer=5-Location)>0) Way=0;
 172   3                      else Way=4;
 173   3                      break;
 174   3                      }
 175   2              case 0x50:
 176   2                  {
C51 COMPILER V9.01   ZHU1                                                                  06/14/2018 11:48:13 PAGE 4   

 177   3                      if((Layer=4-Location)>0) Way=0;
 178   3                      else {Layer=Location-4;Way=4;}
 179   3                      break;
 180   3                      }
 181   2              case 0x60:
 182   2                  {
 183   3                      if((Layer=3-Location)>0) Way=0;
 184   3                      else {Layer=Location-3;Way=4;}
 185   3                      break;
 186   3                      }
 187   2              case 0x70:
 188   2                  {
 189   3                      if((Layer=2-Location)>0) Way=0;
 190   3                      else {Layer=Location-2;Way=4;}
 191   3                      break;
 192   3                      }
 193   2              case 0x80:
 194   2                  {
 195   3                      Layer=0;
 196   3                      
 197   3                      
 198   3                      }
 199   2              }
 200   1      
 201   1      //Seg=(Zhu_AcceptSaveArray[0]<<4);
 202   1      //Seg=HoistControlArray[Location];
 203   1      }
 204          
 205          void HoistSpeed1(char Way)                                       //µç»ú0m/s--0.5m/s¼ä ¼ÓËÙ»ò¼õËÙÐÐÊ»×Ó³ÌÐò£¨¼ÓËÙ¶È 0.75£©
 206          {
 207   1      char time,rotate;                                        // time: µç»úÑ­»·´ÎÊý  rotate£ºµç»úÕý·´×ªÊý×éÑ­»·
 208   1              if(Warning==0)
 209   1                 {
 210   2                      Switch=1;
 211   2                      while(1)
 212   2                          {
 213   3                           beep=~beep;
 214   3                       delay1ms();
 215   3                          }
 216   2                 }
 217   1      switch(Way)
 218   1          {                                                    // Way:Õý·´×ªÅÐ¶Ï      0 Õý´«£¬·ñÔò ·´×ª
 219   2          case 0:
 220   2                   {
 221   3               for(time=0;time<2;time++)
 222   3                   for(rotate=0;rotate<4;rotate++)
 223   3                       {
 224   4                                Motor=HoistRun1[rotate];
 225   4                            delay62ms500us();                  
 226   4                           }
 227   3                   break;
 228   3                   }
 229   2              default :
 230   2                   {
 231   3                   for(time=0;time<2;time++)
 232   3                   for(rotate=0;rotate<4;rotate++)
 233   3                       {
 234   4                                Motor=HoistRun[rotate];
 235   4                            delay62ms500us(); 
 236   4                           }
 237   3                   }
 238   2          }
C51 COMPILER V9.01   ZHU1                                                                  06/14/2018 11:48:13 PAGE 5   

 239   1      }
 240          
 241          
 242          void HoistSpeed2(char Way)                                       // µç»ú 0.5m/s--1.0m/s¼ä ¼ÓËÙ»ò¼õËÙÐÐÊ»×Ó³ÌÐò£¨¼ÓËÙ¶È 0.75£©
 243          {
 244   1      char time,rotate;
 245   1              if(Warning==0)
 246   1                 {
 247   2                      Switch=1;
 248   2                      while(1)
 249   2                          {
 250   3                           beep=~beep;
 251   3                       delay1ms();
 252   3                          }
 253   2                 } 
 254   1      switch(Way)
 255   1          {
 256   2          case 0:
 257   2                   {
 258   3               for(time=0;time<4;time++)
 259   3                   for(rotate=0;rotate<4;rotate++)
 260   3                   {
 261   4                               Motor=HoistRun1[rotate];
 262   4                           delay31ms250us();                           
 263   4                       }
 264   3                       break;
 265   3                   }
 266   2          default:
 267   2                   {
 268   3               for(time=0;time<4;time++)
 269   3                   for(rotate=0;rotate<4;rotate++)
 270   3                   {
 271   4                               Motor=HoistRun[rotate];
 272   4                           delay31ms250us();                           
 273   4                       }
 274   3                   }
 275   2          }
 276   1      }
 277          void HoistSpeed3(char Way)                                        //µç»ú 1.0m/s--1.5m/s¼ä ¼ÓËÙ»ò¼õËÙÐÐÊ»×Ó³ÌÐò£¨¼ÓËÙ¶È 0.75£©
 278          {
 279   1      char time,rotate;
 280   1              if(Warning==0)
 281   1                 {
 282   2                      Switch=1;
 283   2                      while(1)
 284   2                          {
 285   3                           beep=~beep;
 286   3                       delay1ms();
 287   3                          }
 288   2                 }
 289   1      switch(Way)
 290   1          {
 291   2          case 0:
 292   2                   { 
 293   3                    for(time=0;time<6;time++)
 294   3                        for(rotate=0;rotate<4;rotate++)
 295   3                        {
 296   4                                    Motor=HoistRun1[rotate];
 297   4                                delay20ms825us();
 298   4                            }
 299   3                       break;
 300   3                       }
C51 COMPILER V9.01   ZHU1                                                                  06/14/2018 11:48:13 PAGE 6   

 301   2          default:
 302   2                   { 
 303   3                    for(time=0;time<6;time++)
 304   3                        for(rotate=0;rotate<4;rotate++)
 305   3                        {
 306   4                                    Motor=HoistRun[rotate];
 307   4                                delay20ms825us();
 308   4                            }
 309   3                       }
 310   2          }
 311   1      }
 312          void HoistSpeed4(char Way,char Special_One,char Special_Two )     // 1.5m/s ÔÈËÙÐÐÊ»×Ó³ÌÐò£¨¼ÓËÙ¶È 0£©  £¨×¢
             -£º´ËÎª0.5sµÄÔÈËÙÐÐÊ»£©
 313          {
 314   1      char time,rotate;
 315   1              if(Warning==0)
 316   1                 {
 317   2                      Switch=1;
 318   2                      while(1)
 319   2                          {
 320   3                           beep=~beep;
 321   3                       delay1ms();
 322   3                          }
 323   2                 }
 324   1      switch(Way)
 325   1          {
 326   2      
 327   2          case 0:
 328   2                   { 
 329   3                    for(time=0;time<6;time++)
 330   3                        for(rotate=0;rotate<4;rotate++)
 331   3                        {
 332   4                                    Motor=HoistRun1[rotate];
 333   4                                delay20ms825us();
 334   4                                                if(Layer!=1 && Special_Two==1 && Special_One==3 && time*rotate==12 )            //ÇÅÏáÎ»ÖÃÈ·¶¨
 335   4                                                    {
 336   5                                                    Seg=SegArray[++Location];
 337   5                                                        Special_One=0;
 338   5                                                        Special_Two=0;
 339   5      
 340   5                                                        }     
 341   4                            }
 342   3                       break;
 343   3                       }
 344   2          default:
 345   2                   { 
 346   3                    for(time=0;time<6;time++)
 347   3                        for(rotate=0;rotate<4;rotate++)
 348   3                        {
 349   4                                    Motor=HoistRun[rotate];
 350   4                                delay20ms825us();
 351   4                                                if(Layer!=1 && Special_Two==1 && Special_One==3 && time*rotate==12 )
 352   4                                                    {
 353   5                                                    Seg=SegArray[--Location];
 354   5                                                        Special_One=0;
 355   5                                                        Special_Two=0;
 356   5      
 357   5                                                        }     
 358   4                            }
 359   3                       }
 360   2          }
 361   1      }
C51 COMPILER V9.01   ZHU1                                                                  06/14/2018 11:48:13 PAGE 7   

 362          
 363          
 364          void Hoist()                                    // ÆðÖØµç»ú¿ØÖÆ×Ó³ÌÐò    
 365          {                                                                                          // Layer:ÇÅÏáÎ»ÒÆ²ãÊý Way:Õý·´×ªÅÐ¶Ï
 366   1      char i;                                        // i:ÔÈËÙ×Ó³ÌÐòÑ­»·´ÎÊý (¸ù¾ÝÐÐ½ø²ãÊý¸Ä±ä´ÎÊý i=3+6*(²ãÊý-1
             -)£»  )
 367   1      char Special_One=0,Special_Two=1;                          //Special£ºµ±ÇÅÏáÎ»ÒÆ²ãÊý´óÓÚÒ»Ê±£¬ÎªÊµÊ±È·¶¨ÇÅÏáÎ»ÖÃ£¬ËùÒÔ´æÔÚµÄ±ä
             -Á¿
 368   1      The_Lamp_Of_Way();
 369   1      HoistSpeed1(Way);                                                          
 370   1      HoistSpeed2(Way);
 371   1      HoistSpeed3(Way);
 372   1      for(i=0;i<3+6*(Layer-1);i++)
 373   1          {
 374   2              //Seg=HoistControlArray[6*(Layer-1)];
 375   2          HoistSpeed4(Way,Special_One,Special_Two);
 376   2              Special_One++;                                          //Ö»ÓÐÔÚµÚÒ»´ÎÇÅÏáÎ»ÖÃ¼Ó£¨¼õ£©Ò»È·¶¨Ê±£¬´ËÓï¾äÓÐÓÃ¡£ÆäÓàÎ»ÖÃ¼Ó£¨¼õ£©Ò»È·¶¨ÓÉif(i!=3 &
             -& (i-3)%6==0)È·¶¨
 377   2              if(i%3==0)                                                                      //Ã¿µ±µçÌÝÔÈËÙÔËÐÐ1.5Ãë£¬´ÓÐÂÉ¨ÃèÒ»´Î½ÓÊÕÒý½Å£¬¿´×î¸ßÓÅÏÈ¼¶ÊÇ·ñ¸Ä±ä£»
 378   2                  {
 379   3                      if((Signal<<4) ^ (Zhu_AcceptSaveArray[0]<<4))
 380   3                          {
 381   4                              //Seg=HoistControlArray[Location];
 382   4                          Zhu_AcceptSaveArray[0]=Signal;
 383   4                              Judge();
 384   4      
 385   4                              }
 386   3                      if(i!=3 && (i-3)%6==0)                                  //Àý£ºµ±Î»ÒÆ²ãÊýÎªÈýÊ±£¬ÇÅÏá¼ÓËÙ1.125m£¨1.5s£©£¬ÔÙÔÈËÙ2.25m+1.125m£¨¼´1.5s+0.
             -75s£©£¬
 387   3                          {                                                                   //ÇÅÏáÎ»ÖÃ¼Ó£¨¼õ£©Ò»£¨´ËÎªµÚÒ»´ÎÇÅÏáÈ·¶¨£©¡£Ö®ºóÔÈËÙ4.5m£¨¼´3s£©£¬ÇÅÏáÎ»ÖÃ¼Ó£¨¼õ£©Ò»¡£
 388   4                                                                                                      //ÔÙÖ®ºóÔÈËÙ4.5m£¨¼´3s£©£¬ÔÙ¼õËÙ1.125m£¨1.5s£©£¬ÇÅÏáÎ»ÖÃ¼Ó£¨¼õ£©Ò»¡£
 389   4                              Special_Two=1;                                      //i£¡=3:±£Ö¤ÔÚµÚ¶þ´Î£¨»òÒÔÉÏ£©ÇÅÏáÎ»ÖÃÈ·¶¨Ê±ÉúÐ§£¬
 390   4                              Special_One=3;                                          //(i-3)%6==0£º±£Ö¤ÔÚµÚÒ»´ÎÇÅÏáÈ·¶¨ºó£¬µÚÒ»´ÎÔÈËÙ4.5mÊ±£¬ÇÅÏáÎ»ÖÃ¼Ó£¨¼õ£©Ò»£¨¶ÔÓÚÎ»Ò
             -Æ²ãÎªÈýµÄ£©
 391   4                              }                                                               //(i-3)%6==0£º±£Ö¤ÔÚµÚÒ»´ÎÇÅÏáÈ·¶¨ºó£¬µÚÒ»£¨¶þ£©´ÎÔÈËÙ4.5mÊ±£¬ÇÅÏáÎ»ÖÃ¼Ó£¨¼õ£©Ò»£¨¶ÔÓÚÎ»ÒÆ
             -²ãÎªÈýËÄµÄ£©
 392   3                      }
 393   2              //Seg=HoistControlArray[Layer];
 394   2              }
 395   1      HoistSpeed3(Way);
 396   1      HoistSpeed2(Way);
 397   1      HoistSpeed1(Way);
 398   1      SwitchJudge();
 399   1      //Seg=HoistControlArray[6*(Layer-1)];
 400   1      ArriveSound();
 401   1      Zhu_Status();
 402   1      if(Way==0)
 403   1          Seg=SegArray[++Location];
 404   1      else
 405   1          Seg=SegArray[--Location];    
 406   1      }
 407          
 408          void DoorOpen()
 409          {
 410   1      char z;
 411   1          for(z=0;z<8;z++)
 412   1              {
 413   2              Motor=DoorRun1[z%4];
 414   2              delay300ms();
 415   2              }
 416   1      
 417   1      }
C51 COMPILER V9.01   ZHU1                                                                  06/14/2018 11:48:13 PAGE 8   

 418          void DoorClose()
 419          {
 420   1      char z;
 421   1          if(DoorStatus==1)
 422   1              for(z=0;z<8;z++)
 423   1                  {
 424   2                   Motor=DoorRun[z%4];
 425   2                   delay300ms();
 426   2                  }
 427   1      }
 428          void IndoorRequest(char Long)
 429          {
 430   1      char i;                                 //DoorStatus 1±íÃÅ¿ª×Å£¬0±íÃÅ¹Ø×Å
 431   1      for(i=0;i<Long;i++)
 432   1          {
 433   2              OverWeightSound();
 434   2              if(Warning==0)
 435   2                 {
 436   3                      Switch=1;
 437   3                      while(1)
 438   3                          {
 439   4                           beep=~beep;
 440   4                       delay1ms();
 441   4                          }
 442   3                 }
 443   2              if(OpenDoor==0  && DoorStatus==1)
 444   2                 {
 445   3                  Signal=0x4f; 
 446   3                 }
 447   2              if(CloseDoor==0  && DoorStatus==0)
 448   2                 {
 449   3                  Signal=0x5f; 
 450   3                 }
 451   2              if(OpenDoor==0 && DoorStatus==0)
 452   2                 {
 453   3                 DoorOpen();
 454   3                 Signal=0x4f;
 455   3                 DoorStatus=1;
 456   3                 }
 457   2              if(CloseDoor==0 && DoorStatus==1)
 458   2                 {
 459   3                 DoorClose();
 460   3                 Signal=0x5f;
 461   3                 DoorStatus=0;
 462   3                 }
 463   2              delay100ms();
 464   2              }
 465   1      }
 466          void Door()
 467          {
 468   1      DoorOpen();
 469   1      DoorStatus=1;
 470   1      IndoorRequest(20);
 471   1      DoorClose();
 472   1      DoorStatus=0;
 473   1      IndoorRequest(2);
 474   1      }
 475          void Zhu_RequestSent()
 476          {                                                                                                  //ËÄÎ»·¢ËÍÐÅºÅÎ»£¬×î×óÎ»£ºÉÏÏÂÐÐ £¬ÓÒÈýÎ»£ºÇÅÏáÎ»ÖÃ
 477   1      if(Location==1 )
 478   1          {
 479   2              Zhu_SentSaveArray[0]=LampControlArray[0]; 
C51 COMPILER V9.01   ZHU1                                                                  06/14/2018 11:48:13 PAGE 9   

 480   2              Signal=Zhu_SentSaveArray[0];
 481   2              }
 482   1                                                                                      
 483   1      else if(Location==2 && Way==0)
 484   1          {
 485   2              Zhu_SentSaveArray[0]=LampControlArray[1]; 
 486   2              Signal=Zhu_SentSaveArray[0];
 487   2              }
 488   1      
 489   1      else if(Location==3 && Way==0)
 490   1          {
 491   2              Zhu_SentSaveArray[0]=LampControlArray[2]; 
 492   2              Signal=Zhu_SentSaveArray[0];
 493   2              }
 494   1      
 495   1      else if(Location==4 && Way==0)
 496   1          {
 497   2              Zhu_SentSaveArray[0]=LampControlArray[3]; 
 498   2              Signal=Zhu_SentSaveArray[0];
 499   2              }
 500   1      
 501   1      else if(Location==5 )
 502   1          {
 503   2              Zhu_SentSaveArray[0]=LampControlArray[4]; 
 504   2              Signal=Zhu_SentSaveArray[0];
 505   2              }
 506   1      
 507   1      else if(Location==4 && Way==4)
 508   1          {
 509   2              Zhu_SentSaveArray[0]=LampControlArray[5]; 
 510   2              Signal=Zhu_SentSaveArray[0];
 511   2              }
 512   1      
 513   1      else if(Location==3 && Way==4)
 514   1          {
 515   2              Zhu_SentSaveArray[0]=LampControlArray[6]; 
 516   2              Signal=Zhu_SentSaveArray[0];
 517   2              }
 518   1      
 519   1      else if(Location==2 && Way==4)
 520   1          {
 521   2              Zhu_SentSaveArray[0]=LampControlArray[7]; 
 522   2              Signal=Zhu_SentSaveArray[0];
 523   2              }
 524   1      }
 525          
 526          void Zhu_RequestAccept_two()                       //  µ±ÓÃ»§½øÈëÇÅÏáºó£¬¶øÍâºôÄÚÑ¡¶¼Ã»ÓÐÊ±£¬ÓÃ´Ë×Ó³ÌÐò½øÐÐËÀÑ­»·Ñ­»·É¨ÃèÇë
             -ÇóÐÅºÅ
 527          {
 528   1      while(1)
 529   1          {
 530   2              SwitchJudge();
 531   2              Zhu_RequestSent();
 532   2          if((Signal<<4) ^ (Zhu_AcceptSaveArray[0]<<4))        // ^:°´Î»Òì»ò
 533   2             {
 534   3                 Zhu_AcceptSaveArray[0]=Signal;
 535   3             Judge();
 536   3                 //Seg=HoistControlArray[Layer];
 537   3             if(Layer!=0)
 538   3                        break;
 539   3      }}}
 540          
C51 COMPILER V9.01   ZHU1                                                                  06/14/2018 11:48:13 PAGE 10  

 541          void Zhu_RequestAccept()                          
 542          {
 543   1      if((Signal<<4) ^ (Zhu_AcceptSaveArray[0]<<4))                           //---------Á¬Ðø¿ªÃÅÓë´ËÓÐ¹Ø µ±µÚ¶þ´ÎÒÔÉÏÇëÇó(Signal<<4)±ä
             -ÁË
 544   1         {
 545   2         //Seg=(Zhu_AcceptSaveArray[0]<<4);
 546   2         if(DoorStatus==1)
 547   2             DoorClose();                                                                                                              // ^:°´Î»Òì»ò,ÒòÓÐ°´Î»Î»ÒÆ£¬ËùÒÔË«Ä¿ÔËËã·û²»ÄÜÓÃÁË
 548   2         if((Signal<<4) ^ 0x80)
 549   2             Zhu_AcceptSaveArray[0]=Signal;
 550   2         Judge();        
 551   2         if(Layer==0)                                                 //µ±ÇÅÏáÔÚÍâºôÂ¥²ã£¬Ö±½Ó¿ªÃÅ
 552   2             {
 553   3                 //Seg=(Signal<<4);
 554   3             Door();                                                  //ÃÅÏµÍ³×Ó³ÌÐò
 555   3             Zhu_RequestAccept_two();
 556   3             }
 557   2         
 558   2         else                                                    //µ±ÇÅÏá²»ÔÚÍâºôÂ¥²ã£¬È¥µ½ÇëÇóÂ¥²ã»òÓÃ»§ÒÆ¶¯
 559   2             {
 560   3                  //Seg=HoistControlArray[Layer];
 561   3              Hoist();                           
 562   3                      Door();
 563   3                      Judge();
 564   3                      The_Lamp_Of_Way();
 565   3                      //Zhu_RequestAccept_two();
 566   3      
 567   3             }                
 568   2         }
 569   1      }
 570          
 571          void Zhu_Status()                                 //Íê³ÉÏìÓ¦¹ý³Ìºó£¬ÐÞ¸ÄÄ³Ð©×´Ì¬
 572          {
 573   1      //Zhu_AcceptSaveArray[0]=0xff;
 574   1      Layer=0;
 575   1      
 576   1      }
 577          void main()
 578          {
 579   1      Seg=SegArray[Location];
 580   1      //Seg=Zhu_AcceptSaveArray[0];
 581   1      UP=0;
 582   1      DOWN=0;
 583   1      Switch=1;
 584   1      Signal=0x0f;
 585   1      Motor=0xdd;
 586   1      beep=0;
 587   1               while(1)
 588   1               {
 589   2                       SwitchJudge();
 590   2               Zhu_RequestAccept();                           //½ÓÊÜÇëÇóÐÅºÅ
 591   2                       IndoorRequest(5);
 592   2                       if(Layer!=0)
 593   2                           {
 594   3                                Hoist();                         
 595   3                        Door();
 596   3                                Judge();                                              //ÓÐÓëÔ­·½ÏòÏà·´µÄÇëÇóÊ±£¬µ±Æ½²ãºóÆð¸Ä±äWayµÄ×÷ÓÃ
 597   3                                The_Lamp_Of_Way();
 598   3                               }
 599   2                       Zhu_RequestSent();
 600   2                       
 601   2                   }
C51 COMPILER V9.01   ZHU1                                                                  06/14/2018 11:48:13 PAGE 11  

 602   1      
 603   1      }
 604                  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1334    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     53       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
